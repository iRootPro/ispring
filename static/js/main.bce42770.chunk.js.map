{"version":3,"sources":["components/RigthSide/styles.module.css","components/LeftSide/styles.module.css","components/common/Header/styles.module.css","style.module.css","components/common/Header/index.tsx","components/LeftSide/Shapes/index.tsx","reducers/draw-reducer.ts","components/LeftSide/Styles/index.tsx","components/LeftSide/index.tsx","components/RigthSide/index.tsx","reducers/app-reducer.ts","App.tsx","helpers/localStorage.ts","reportWebVitals.ts","app/store.ts","index.tsx","components/LeftSide/Shapes/styles.module.css","components/LeftSide/Styles/styles.module.css"],"names":["module","exports","Header","title","className","styles","Shapes","createElement","clickHandler","name","wrap","figuresBlock","triangle","onClick","rectangle","initialState","currentColor","selectShapeID","ctx","shapes","addShape","shape","type","setSelectShapeID","id","Styles","selectID","useSelector","state","draw","dispatch","useDispatch","selectShape","filter","length","color","disabled","value","onChange","e","target","payload","LeftSide","leftSide","min","max","x","canvas","width","y","height","select","Date","now","w","Math","random","h","RightSide","selectId","canvasRef","useRef","dragShape","startX","startY","clearRect","map","beginPath","fillStyle","fillRect","stroke","setLineDash","strokeStyle","rect","border","closePath","save","moveTo","lineTo","fill","strokeRect","useEffect","current","clientWidth","clientHeight","getContext","setContextCanvas","handleOnMouseUp","rightSide","tabIndex","onKeyDown","key","handlePressKey","ref","onMouseDown","nativeEvent","offsetX","clientLeft","offsetY","clientTop","isTarget","ax","ay","bx","by","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","invDenom","u","v","checkShapes","onMouseMove","mouseX","mouseY","dx","dy","onMouseUp","onMouseOut","isInit","App","app","savedState","serializedState","localStorage","getItem","JSON","parse","loadState","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newShapes","store","createStore","subscribe","getState","stringify","setItem","saveState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce42770.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightSide\":\"styles_rightSide__5AGF0\",\"canvas\":\"styles_canvas__3k_rj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftSide\":\"styles_leftSide__1Xhvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2H5zd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__137Qd\"};","import React from 'react';\nimport styles from './styles.module.css'\n\nconst Header = ({title}: { title: string }) => {\n    return (\n        <span className={styles.title}>{title}</span>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Header from '../../common/Header';\nimport styles from './styles.module.css'\n\nconst Shapes = ({createElement}: propsType) => {\n    const clickHandler = (name: string) => {\n        createElement(name)\n    }\n    return (\n        <>\n            <Header title={'Shapes'}/>\n            <div className={styles.wrap}>\n                <div className={styles.figuresBlock}>\n                    <div className={styles.triangle} onClick={() => clickHandler('triangle')}></div>\n                    <div className={styles.rectangle} onClick={() => clickHandler('rectangle')}></div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Shapes;\n\ntype propsType = {\n    createElement: (name: string) => void\n}\n","const DRAW_SET_CONTEXT = 'DRAW/SET-CONTEXT'\nconst DRAW_SET_CURRENT_COLOR = 'DRAW/SET-CURRENT-COLOR'\nconst DRAW_ADD_SHAPE = 'DRAW/ADD-SHAPE'\nconst DRAW_REMOVE_SELECT_SHAPE = 'DRAW/REMOVE-SELECT-SHAPE'\nconst DRAW_SET_COLOR_SHAPE = 'DRAW/SET-COLOR-SHAPE'\nconst DRAW_SET_SELECT_SHAPE_ID = 'DRAW/SET-SELECT-SHAPE-ID'\nconst DRAW_RESTORE_SHAPE_LOCAL_STORAGE = 'DRAW/RESTORE_SHAPE_LOCAL_STORAGE'\nconst initialState: DrawStateType = {\n    currentColor: '#000000',\n    selectShapeID: null,\n    ctx: null,\n    shapes: [],\n}\n\n\nexport const drawReducer = (state: DrawStateType = initialState, action: ActionType): DrawStateType => {\n    switch (action.type) {\n        case \"DRAW/SET-CONTEXT\": {\n            return {...state, ctx: action.ctx}\n        }\n        case \"DRAW/SET-CURRENT-COLOR\": {\n            return {...state, currentColor: action.color}\n        }\n        case \"DRAW/ADD-SHAPE\": {\n            return {...state, shapes: [...state.shapes, action.shape]}\n        }\n        case \"DRAW/REMOVE-SELECT-SHAPE\": {\n            return {...state, shapes: state.shapes.filter(shape => shape.id !== action.id)}\n        }\n        case \"DRAW/SET-COLOR-SHAPE\": {\n            const newShapes = state.shapes.map(shape => {\n                if (shape.id === action.payload.id) {\n                    shape.color = action.payload.color\n                    return shape\n                }\n                return shape\n            })\n            return {...state, shapes: newShapes}\n        }\n        case \"DRAW/SET-SELECT-SHAPE-ID\": {\n            return {...state, selectShapeID: action.id}\n        }\n        case \"DRAW/RESTORE_SHAPE_LOCAL_STORAGE\": {\n            if (!action.shapes) return state\n            return {...state, shapes: action.shapes}\n        }\n        default:\n            return state\n    }\n}\n\nexport const setContextCanvas = (ctx: CanvasRenderingContext2D) => {\n    return {type: DRAW_SET_CONTEXT, ctx} as const\n}\n\nexport const setCurrentColor = (color: string) => {\n    return {type: DRAW_SET_CURRENT_COLOR, color} as const\n}\n\nexport const addShape = (shape: shapesType) => {\n    return {type: DRAW_ADD_SHAPE, shape} as const\n}\n\nexport const removeSelectShape = (id: number) => {\n    return {type: DRAW_REMOVE_SELECT_SHAPE, id} as const\n}\n\nexport const setSelectShapeID = (id: null | number) => {\n    return {type: DRAW_SET_SELECT_SHAPE_ID, id} as const\n}\n\nexport const setColorShape = (payload: colorType) => {\n    return {type: DRAW_SET_COLOR_SHAPE, payload} as const\n}\n\nexport const restoreStateLocalStorage = (shapes: Array<shapesType>) => {\n    return {type: DRAW_RESTORE_SHAPE_LOCAL_STORAGE, shapes} as const\n}\n\n\ntype ActionType =\n    | ReturnType<typeof setContextCanvas>\n    | ReturnType<typeof setCurrentColor>\n    | ReturnType<typeof addShape>\n    | ReturnType<typeof removeSelectShape>\n    | ReturnType<typeof setSelectShapeID>\n    | ReturnType<typeof setColorShape>\n    | ReturnType<typeof restoreStateLocalStorage>\n\n\nexport type DrawStateType = {\n    currentColor: string\n    ctx: CanvasRenderingContext2D | null\n    selectShapeID: number | null\n    shapes: Array<shapesType>\n}\n\ntype triangleType = {\n    id: number\n    x: number\n    y: number\n    color: string\n    type: 'triangle'\n    select: boolean\n}\n\ntype rectangleType = {\n    id: number\n    x: number\n    y: number\n    w: number\n    h: number\n    color: string\n    select: boolean\n    type: 'rectangle'\n}\n\ntype colorType = {\n    id: number | null\n    color: string\n}\n\nexport type shapesType = triangleType | rectangleType\n","import React from 'react';\nimport Header from '../../common/Header';\nimport styles from './styles.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateType} from \"../../../app/store\";\nimport {setColorShape, shapesType} from '../../../reducers/draw-reducer';\n\nconst Styles = () => {\n    const selectID = useSelector<RootStateType, null | number>(state => state.draw.selectShapeID)\n    const shapes = useSelector<RootStateType, Array<shapesType>>(state => state.draw.shapes)\n    const dispatch = useDispatch()\n    let currentColor: string = 'black'\n    const selectShape = shapes.filter(shape => shape.id === selectID)\n    if (selectShape.length === 1) {\n        currentColor = selectShape[0].color\n    }\n\n    const handleChangeColor = (color: string) => {\n        dispatch(setColorShape({id: selectID, color: color}))\n    }\n    return (\n        <>\n            <Header title={'Style'}/>\n            <div className={styles.wrap}>\n                <span className={styles.title}>Fill</span>\n                <input disabled={selectID ? false : true} type=\"color\" value={currentColor} onChange={(e) =>\n                    handleChangeColor(e.target.value)}/>\n            </div>\n        </>\n    );\n};\n\nexport default Styles;\n","import React from 'react';\nimport styles from './styles.module.css'\nimport Shapes from \"./Shapes\";\nimport Styles from \"./Styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateType} from \"../../app/store\";\nimport {addShape, DrawStateType} from \"../../reducers/draw-reducer\";\n\n\nconst LeftSide = () => {\n    const {ctx, currentColor} = useSelector<RootStateType, DrawStateType>(state => state.draw)\n    const dispatch = useDispatch()\n    const randomSide = (min: number, max: number) => {\n        return min + Math.random() * (max + 1 - min);\n    }\n    const handleCreateElement = (name: string) => {\n        if (!ctx) return\n        switch (name) {\n            case 'triangle': {\n                const x = ctx.canvas.width / 2\n                const y = ctx.canvas.height / 2\n                dispatch(addShape({\n                    x,\n                    y,\n                    color: currentColor,\n                    type: 'triangle',\n                    select: false,\n                    id: Date.now()\n                }))\n                break\n            }\n            case 'rectangle': {\n                const w = randomSide(100, 150)\n                const h = 50\n                const x = ctx.canvas.width / 2 - w / 2\n                const y = ctx.canvas.height / 2 - h / 2\n                dispatch(addShape({\n                    x,\n                    y,\n                    h,\n                    w,\n                    type: 'rectangle',\n                    color: currentColor,\n                    select: false,\n                    id: Date.now()\n                }))\n                break\n            }\n            default:\n                break\n        }\n    }\n    return (\n        <div className={styles.leftSide}>\n            <Shapes createElement={handleCreateElement}/>\n            <Styles/>\n        </div>\n    );\n};\n\nexport default LeftSide;\n\n","import React, {useEffect, useRef} from 'react';\nimport styles from './styles.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {removeSelectShape, setContextCanvas, setSelectShapeID, shapesType} from \"../../reducers/draw-reducer\";\nimport {RootStateType} from \"../../app/store\";\n\nconst RightSide = () => {\n        const dispatch = useDispatch()\n        const ctx = useSelector<RootStateType, CanvasRenderingContext2D | null>(state => state.draw.ctx)\n        const shapes = useSelector<RootStateType, Array<shapesType>>(state => state.draw.shapes)\n        const canvasRef = useRef<HTMLCanvasElement>(null)\n        let dragShape: shapesType | null = null\n        let selectId: null | number\n        let startX: number | null = null\n        let startY: number | null = null\n\n\n        const draw = () => {\n            if (!ctx) return\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n            const border = 2\n            shapes.map(shape => {\n                switch (shape.type) {\n                    case \"rectangle\": {\n                        ctx.beginPath()\n                        ctx.fillStyle = shape.color\n                        ctx.fillRect(shape.x, shape.y, shape.w, shape.h)\n                        ctx.stroke()\n                        if (dragShape?.id === shape.id) {\n                            ctx.setLineDash([10])\n                            ctx.strokeStyle = 'blue'\n                            ctx.rect(shape.x - border, shape.y - border, shape.w + border * 2, shape.h + border * 2)\n                            ctx.stroke()\n                        }\n                        ctx.closePath()\n                        ctx.save()\n                        break\n                    }\n                    case \"triangle\": {\n                        ctx.beginPath()\n                        ctx.moveTo(shape.x, shape.y - 50)\n                        ctx.lineTo(shape.x - 50, shape.y + 50)\n                        ctx.lineTo(shape.x + 50, shape.y + 50)\n                        ctx.fillStyle = shape.color\n                        ctx.fill()\n                        ctx.closePath()\n                        ctx.save()\n                        if (dragShape?.id === shape.id) {\n                            ctx.setLineDash([10])\n                            ctx.strokeStyle = 'blue'\n                            ctx.strokeRect(shape.x - 50 - border, shape.y - 50 - border, 100 + border * 2, 100 + border * 2)\n                        }\n                        break\n                    }\n                    default: {\n                        return\n                    }\n                }\n            })\n        }\n\n        useEffect(() => {\n            if (canvasRef.current) {\n                const canvas = canvasRef.current\n                canvas.width = canvas.clientWidth\n                canvas.height = canvas.clientHeight\n                const ctx = canvas.getContext('2d')\n                if (ctx) {\n                    dispatch(setContextCanvas(ctx))\n                }\n            }\n        }, [])\n\n        useEffect(() => {\n            draw()\n        }, [shapes])\n\n        const checkShapes = (x: number | null, y: number | null) => {\n            let isTarget = false\n            shapes.map(shape => {\n                switch (shape.type) {\n                    case \"triangle\": {\n                        if (!x || !y) return\n                        //http://www.blackpawn.com/texts/pointinpoly/default.html\n                        const ax = shape.x\n                        const ay = shape.y - 50\n                        const bx = shape.x - 50\n                        const by = shape.y + 50\n                        const cx = shape.x + 50\n                        const cy = shape.y + 50\n                        const px = x\n                        const py = y\n                        const v0 = [cx - ax, cy - ay];\n                        const v1 = [bx - ax, by - ay];\n                        const v2 = [px - ax, py - ay];\n\n                        const dot00 = (v0[0] * v0[0]) + (v0[1] * v0[1]);\n                        const dot01 = (v0[0] * v1[0]) + (v0[1] * v1[1]);\n                        const dot02 = (v0[0] * v2[0]) + (v0[1] * v2[1]);\n                        const dot11 = (v1[0] * v1[0]) + (v1[1] * v1[1]);\n                        const dot12 = (v1[0] * v2[0]) + (v1[1] * v2[1]);\n\n                        const invDenom = 1 / (dot00 * dot11 - dot01 * dot01);\n\n                        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n                        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\n                        const isTriangleInside = ((u >= 0) && (v >= 0) && (u + v < 1))\n                        if (isTriangleInside) {\n                            dragShape = shape\n                            isTarget = true\n                        }\n                        break\n                    }\n                    case 'rectangle': {\n                        if (!x || !y) return;\n                        if (x >= shape.x && x <= shape.x + shape.w && y >= shape.y && y <= shape.y + shape.h) {\n                            dragShape = shape\n                            isTarget = true\n                            break\n                        }\n                    }\n                }\n            })\n            return isTarget\n        }\n\n        const handleMouseDown = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n            if (!ctx) return\n            startX = e.nativeEvent.offsetX - ctx.canvas.clientLeft\n            startY = e.nativeEvent.offsetY - ctx.canvas.clientTop\n            checkShapes(startX, startY)\n            if (dragShape) {\n                selectId = dragShape.id\n                dispatch(setSelectShapeID(dragShape.id))\n                draw()\n            } else {\n                selectId = null\n                dispatch(setSelectShapeID(null))\n                draw()\n            }\n        }\n\n        const handleMouseMove = (e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\n            if (!ctx) return\n            if (!dragShape) return\n            const mouseX = e.nativeEvent.offsetX - ctx.canvas.clientLeft\n            const mouseY = e.nativeEvent.offsetY - ctx.canvas.clientTop\n            if (startX && startY) {\n                const dx = mouseX - startX\n                const dy = mouseY - startY\n                startX = mouseX\n                startY = mouseY\n                dragShape.x += dx\n                dragShape.y += dy\n                draw()\n            }\n        }\n\n        const handleOnMouseUp = () => {\n            dragShape = null\n        }\n\n        const handleOnMouseOut = () => {\n            handleOnMouseUp()\n        }\n\n        const handlePressKey = (e: React.KeyboardEvent) => {\n            if (!selectId) return\n            if (e.key === 'Delete') {\n                dispatch(removeSelectShape(selectId))\n            }\n        }\n\n        return (\n            <div className={styles.rightSide}>\n                <canvas\n                    tabIndex={0}\n                    onKeyDown={(e: React.KeyboardEvent) => handlePressKey(e)}\n                    className={styles.canvas}\n                    ref={canvasRef}\n                    onMouseDown={handleMouseDown}\n                    onMouseMove={handleMouseMove}\n                    onMouseUp={handleOnMouseUp}\n                    onMouseOut={handleOnMouseOut}\n                />\n            </div>\n        );\n    }\n;\n\nexport default RightSide;\n","const APP_SET_INIT_APP = 'APP/SET-INIT-APP'\n\nconst initialState: appStateInitType = {\n    isInit: false\n}\n\nexport const appReducer = (state: appStateInitType = initialState, action: ActionType): appStateInitType => {\n    switch (action.type) {\n        case \"APP/SET-INIT-APP\": {\n            return {...state, isInit: true}\n        }\n        default:\n            return state\n    }\n}\n\nexport const setInitApp = () => {\n    return {type: APP_SET_INIT_APP} as const\n}\n\ntype ActionType =\n    | ReturnType<typeof setInitApp>\n\nexport type appStateInitType = {\n    isInit: boolean\n}\n\n","import React from 'react';\nimport LeftSide from \"./components/LeftSide\";\nimport RightSide from \"./components/RigthSide\";\nimport styles from './style.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loadState} from \"./helpers/localStorage\";\nimport {restoreStateLocalStorage} from \"./reducers/draw-reducer\";\nimport {RootStateType} from \"./app/store\";\nimport { setInitApp } from './reducers/app-reducer';\n\nfunction App() {\n    const ctx = useSelector<RootStateType>(state => state.draw.ctx)\n    const isInit = useSelector<RootStateType, boolean>(state => state.app.isInit)\n    const dispatch = useDispatch()\n    if (ctx && !isInit) {\n        const savedState = loadState()\n        if (savedState) {\n            dispatch(restoreStateLocalStorage(savedState))\n        }\n        dispatch(setInitApp())\n    }\n\n    return (\n        <section className={styles.container}>\n            <LeftSide/>\n            <RightSide/>\n        </section>\n    );\n}\n\nexport default App;\n","import {shapesType} from \"../reducers/draw-reducer\";\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('shapes')\n        if (serializedState === null) {\n            return undefined\n        }\n        return JSON.parse(serializedState)\n    } catch (e) {\n        return undefined\n    }\n}\n\nexport const saveState = (state: Array<shapesType>) => {\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('shapes', serializedState)\n    }\n    catch (e) {\n\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\nimport {drawReducer} from \"../reducers/draw-reducer\";\nimport {saveState} from './../helpers/localStorage'\nimport {appReducer} from \"../reducers/app-reducer\";\n\nconst rootReducer = combineReducers({\n    draw: drawReducer,\n    app: appReducer\n})\nexport const store = createStore(rootReducer)\n\nstore.subscribe(() => {\n    if (!store.getState().app.isInit) return\n    saveState(store.getState().draw.shapes)\n})\n\nexport type RootStateType = ReturnType<typeof rootReducer>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './app/store'\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__2pGlT\",\"figuresBlock\":\"styles_figuresBlock__3o4Kt\",\"triangle\":\"styles_triangle__1kgHR\",\"rectangle\":\"styles_rectangle__2Sxhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__1xajc\",\"title\":\"styles_title__14cUj\"};"],"sourceRoot":""}